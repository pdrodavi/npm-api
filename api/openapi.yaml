openapi: 3.0.0
info:
  title: Nginx Proxy Manager API
  version: 2.x.x
servers:
- url: https://pmp.cwrd.com.br/api
paths:
  /:
    get:
      summary: Returns the API health status
      operationId: health
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthObject'
              examples:
                default:
                  value:
                    status: OK
                    version:
                      major: 2
                      minor: 1
                      revision: 0
      x-swagger-router-controller: Default
  /schema:
    get:
      summary: Returns this swagger API schema
      operationId: schema
      responses:
        "200":
          description: 200 response
      x-swagger-router-controller: Default
  /tokens:
    get:
      tags:
      - Tokens
      summary: Refresh your access token
      operationId: refreshToken
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObject'
              examples:
                default:
                  value:
                    expires: 1566540510
                    token: eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.ey...xaHKYr3Kk6MvkUjcC4
      security:
      - BearerAuth:
        - tokens
      x-swagger-router-controller: Tokens
    post:
      tags:
      - Tokens
      summary: Request a new access token from credentials
      operationId: requestToken
      parameters: []
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObject'
              examples:
                default:
                  value:
                    result:
                      expires: 1566540510
                      token: eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.ey...xaHKYr3Kk6MvkUjcC4
      x-swagger-router-controller: Tokens
  /settings:
    get:
      tags:
      - Settings
      summary: Get all settings
      operationId: getSettings
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsList'
              examples:
                default:
                  value:
                  - id: default-site
                    name: Default Site
                    description: What to show when Nginx is hit with an unknown Host
                    value: congratulations
                    meta: {}
      security:
      - BearerAuth:
        - settings
      x-swagger-router-controller: Settings
  /settings/{settingID}:
    get:
      tags:
      - Settings
      summary: Get a setting
      operationId: getSetting
      parameters:
      - name: settingID
        in: path
        description: Setting ID
        required: true
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
        example: default-site
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingObject'
              examples:
                default:
                  value:
                    id: default-site
                    name: Default Site
                    description: What to show when Nginx is hit with an unknown Host
                    value: congratulations
                    meta: {}
      security:
      - BearerAuth:
        - settings
      x-swagger-router-controller: Settings
    put:
      tags:
      - Settings
      summary: Update a setting
      operationId: updateSetting
      parameters:
      - name: settingID
        in: path
        description: Setting ID
        required: true
        style: simple
        explode: false
        schema:
          minLength: 1
          type: string
        example: default-site
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingObject'
              examples:
                default:
                  value:
                    id: default-site
                    name: Default Site
                    description: What to show when Nginx is hit with an unknown Host
                    value: congratulations
                    meta: {}
      security:
      - BearerAuth:
        - settings
      x-swagger-router-controller: Settings
  /users:
    get:
      tags:
      - Users
      summary: Get all users
      operationId: getUsers
      parameters:
      - name: expand
        in: query
        description: Expansions
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - permissions
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersList'
              examples:
                default:
                  value:
                  - id: 1
                    created_on: 2020-01-30T09:36:08.000Z
                    modified_on: 2020-01-30T09:41:04.000Z
                    is_disabled: 0
                    email: jc@jc21.com
                    name: Jamie Curnow
                    nickname: James
                    avatar: //www.gravatar.com/avatar/6193176330f8d38747f038c170ddb193?default=mm
                    roles:
                    - admin
                withPermissions:
                  value:
                  - id: 1
                    created_on: 2020-01-30T09:36:08.000Z
                    modified_on: 2020-01-30T09:41:04.000Z
                    is_disabled: 0
                    email: jc@jc21.com
                    name: Jamie Curnow
                    nickname: James
                    avatar: //www.gravatar.com/avatar/6193176330f8d38747f038c170ddb193?default=mm
                    roles:
                    - admin
                    permissions:
                      visibility: all
                      proxy_hosts: manage
                      redirection_hosts: manage
                      dead_hosts: manage
                      streams: manage
                      access_lists: manage
                      certificates: manage
      security:
      - BearerAuth:
        - users
      x-swagger-router-controller: Users
    post:
      tags:
      - Users
      summary: Create a User
      operationId: createUser
      parameters: []
      responses:
        "201":
          description: 201 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserObject'
              examples:
                default:
                  value:
                    id: 2
                    created_on: 2020-01-30T09:36:08.000Z
                    modified_on: 2020-01-30T09:41:04.000Z
                    is_disabled: 0
                    email: jc@jc21.com
                    name: Jamie Curnow
                    nickname: James
                    avatar: //www.gravatar.com/avatar/6193176330f8d38747f038c170ddb193?default=mm
                    roles:
                    - admin
                    permissions:
                      visibility: all
                      proxy_hosts: manage
                      redirection_hosts: manage
                      dead_hosts: manage
                      streams: manage
                      access_lists: manage
                      certificates: manage
      security:
      - BearerAuth:
        - users
      x-swagger-router-controller: Users
  /users/{userID}:
    get:
      tags:
      - Users
      summary: Get a user
      operationId: getUser
      parameters:
      - name: userID
        in: path
        description: User ID or 'me' for yourself
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/userID'
        example: 1
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserObject'
              examples:
                default:
                  value:
                    id: 1
                    created_on: 2020-01-30T09:36:08.000Z
                    modified_on: 2020-01-30T09:41:04.000Z
                    is_disabled: 0
                    email: jc@jc21.com
                    name: Jamie Curnow
                    nickname: James
                    avatar: //www.gravatar.com/avatar/6193176330f8d38747f038c170ddb193?default=mm
                    roles:
                    - admin
      security:
      - BearerAuth:
        - users
      x-swagger-router-controller: Users
    put:
      tags:
      - Users
      summary: Update a User
      operationId: updateUser
      parameters:
      - name: userID
        in: path
        description: User ID or 'me' for yourself
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/userID_1'
        example: 2
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserObject'
              examples:
                default:
                  value:
                    id: 2
                    created_on: 2020-01-30T09:36:08.000Z
                    modified_on: 2020-01-30T09:41:04.000Z
                    is_disabled: 0
                    email: jc@jc21.com
                    name: Jamie Curnow
                    nickname: James
                    avatar: //www.gravatar.com/avatar/6193176330f8d38747f038c170ddb193?default=mm
                    roles:
                    - admin
      security:
      - BearerAuth:
        - users
      x-swagger-router-controller: Users
    delete:
      tags:
      - Users
      summary: Delete a User
      operationId: deleteUser
      parameters:
      - name: userID
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
        example: 2
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
              examples:
                default:
                  value: true
      security:
      - BearerAuth:
        - users
      x-swagger-router-controller: Users
  /users/{userID}/auth:
    put:
      tags:
      - Users
      summary: Update a User's Authentication
      operationId: updateUserAuth
      parameters:
      - name: userID
        in: path
        description: User ID or 'me' for yourself
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/userID_2'
        example: 2
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
              examples:
                default:
                  value: true
      security:
      - BearerAuth:
        - users
      x-swagger-router-controller: Users
  /users/{userID}/permissions:
    put:
      tags:
      - Users
      summary: Update a User's Permissions
      operationId: updateUserPermissions
      parameters:
      - name: userID
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
        example: 2
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
              examples:
                default:
                  value: true
      security:
      - BearerAuth:
        - users
      x-swagger-router-controller: Users
  /users/{userID}/login:
    put:
      tags:
      - Users
      summary: Login as this user
      operationId: loginAsUser
      parameters:
      - name: userID
        in: path
        description: User ID
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
        example: 2
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              examples:
                default:
                  value:
                    token: eyJhbGciOiJSUzI1NiIsInR...16OjT8B3NLyXg
                    expires: 2020-01-31T10:56:23.239Z
                    user:
                      id: 1
                      created_on: 2020-01-30T10:43:44.000Z
                      modified_on: 2020-01-30T10:43:44.000Z
                      is_disabled: 0
                      email: jc@jc21.com
                      name: Jamie Curnow
                      nickname: James
                      avatar: //www.gravatar.com/avatar/3c8d73f45fd8763f827b964c76e6032a?default=mm
                      roles:
                      - admin
      security:
      - BearerAuth:
        - users
      x-swagger-router-controller: Users
  /reports/hosts:
    get:
      tags:
      - Reports
      summary: Report on Host Statistics
      operationId: reportsHosts
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostReportObject'
              examples:
                default:
                  value:
                    proxy: 20
                    redirection: 1
                    stream: 0
                    dead: 1
      security:
      - BearerAuth:
        - reports
      x-swagger-router-controller: Reports
  /audit-log:
    get:
      tags:
      - Audit Log
      summary: Get Audit Log
      operationId: getAuditLog
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostReportObject'
              examples:
                default:
                  value:
                    proxy: 20
                    redirection: 1
                    stream: 0
                    dead: 1
      security:
      - BearerAuth:
        - audit-log
      x-swagger-router-controller: AuditLog
components:
  schemas:
    HealthObject:
      required:
      - status
      - version
      type: object
      properties:
        status:
          type: string
          description: Healthy
          example: OK
        version:
          $ref: '#/components/schemas/HealthObject_version'
      additionalProperties: false
      description: Health object
      example:
        version: "{\"major\":2,\"minor\":0,\"revision\":0}"
        status: OK
    TokenObject:
      required:
      - expires
      - token
      type: object
      properties:
        expires:
          minimum: 1
          type: number
          description: Token Expiry Unix Time
          example: 1566540249
        token:
          type: string
          description: JWT Token
          example: eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.ey...xaHKYr3Kk6MvkUjcC4
      additionalProperties: false
      description: Token object
      example:
        expires: 1566540249
        token: eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.ey...xaHKYr3Kk6MvkUjcC4
    SettingObject:
      required:
      - description
      - id
      - meta
      - name
      - value
      type: object
      properties:
        id:
          minLength: 1
          type: string
          description: Setting ID
          example: default-site
        name:
          minLength: 1
          type: string
          description: Setting Display Name
          example: Default Site
        description:
          minLength: 1
          type: string
          description: Meaningful description
          example: What to show when Nginx is hit with an unknown Host
        value:
          description: Value in almost any form
          example: congratulations
          oneOf:
          - minLength: 1
            type: string
          - type: integer
          - type: object
          - type: number
          - type: array
        meta:
          type: object
          description: Extra metadata
          example: {}
      additionalProperties: false
      description: Setting object
      example:
        meta: {}
        name: Default Site
        description: What to show when Nginx is hit with an unknown Host
        id: default-site
        value: congratulations
    SettingsList:
      type: array
      description: Setting list
      items:
        $ref: '#/components/schemas/SettingObject'
    UserObject:
      required:
      - avatar
      - created_on
      - email
      - id
      - is_disabled
      - modified_on
      - name
      - nickname
      - roles
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          description: User ID
          example: 1
        created_on:
          type: string
          description: Created Date
          example: 2020-01-30T09:36:08.000Z
        modified_on:
          type: string
          description: Modified Date
          example: 2020-01-30T09:41:04.000Z
        is_disabled:
          maximum: 1
          minimum: 0
          type: integer
          description: "Is user Disabled (0 = false, 1 = true)"
          example: 0
        email:
          minLength: 3
          type: string
          description: Email
          example: jc@jc21.com
        name:
          minLength: 1
          type: string
          description: Name
          example: Jamie Curnow
        nickname:
          type: string
          description: Nickname
          example: James
        avatar:
          type: string
          description: "Gravatar URL based on email, without scheme"
          example: //www.gravatar.com/avatar/6193176330f8d38747f038c170ddb193?default=mm
        roles:
          type: array
          description: Roles applied
          example:
          - admin
          items:
            type: string
      additionalProperties: false
      description: User object
      example:
        modified_on: 2020-01-30T09:41:04.000Z
        created_on: 2020-01-30T09:36:08.000Z
        is_disabled: 0
        roles:
        - admin
        name: Jamie Curnow
        nickname: James
        id: 1
        avatar: //www.gravatar.com/avatar/6193176330f8d38747f038c170ddb193?default=mm
        email: jc@jc21.com
    UsersList:
      type: array
      description: User list
      items:
        $ref: '#/components/schemas/UserObject'
    AuthObject:
      required:
      - secret
      - type
      type: object
      properties:
        type:
          pattern: ^password$
          type: string
          example: password
        current:
          maxLength: 64
          minLength: 1
          type: string
          example: changeme
        secret:
          maxLength: 64
          minLength: 8
          type: string
          example: mySuperN3wP@ssword!
      description: Authentication Object
    PermissionsObject:
      type: object
      properties:
        visibility:
          type: string
          description: Visibility Type
          enum:
          - all
          - user
        access_lists:
          type: string
          description: Access Lists Permissions
          enum:
          - hidden
          - view
          - manage
        dead_hosts:
          type: string
          description: 404 Hosts Permissions
          enum:
          - hidden
          - view
          - manage
        proxy_hosts:
          type: string
          description: Proxy Hosts Permissions
          enum:
          - hidden
          - view
          - manage
        redirection_hosts:
          type: string
          description: Redirection Permissions
          enum:
          - hidden
          - view
          - manage
        streams:
          type: string
          description: Streams Permissions
          enum:
          - hidden
          - view
          - manage
        certificates:
          type: string
          description: Certificates Permissions
          enum:
          - hidden
          - view
          - manage
    HostReportObject:
      type: object
      properties:
        proxy:
          type: integer
          description: Proxy Hosts Count
        redirection:
          type: integer
          description: Redirection Hosts Count
        stream:
          type: integer
          description: Streams Count
        dead:
          type: integer
          description: 404 Hosts Count
      example:
        proxy: 0
        stream: 1
        dead: 5
        redirection: 6
    userID:
      oneOf:
      - pattern: ^me$
        type: string
      - minimum: 1
        type: integer
    userID_1:
      oneOf:
      - pattern: ^me$
        type: string
      - minimum: 1
        type: integer
    userID_2:
      oneOf:
      - pattern: ^me$
        type: string
      - minimum: 1
        type: integer
    inline_response_200:
      required:
      - expires
      - token
      - user
      type: object
      properties:
        expires:
          minimum: 1
          type: number
          description: Token Expiry Unix Time
          example: 1566540249
        token:
          type: string
          description: JWT Token
          example: eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.ey...xaHKYr3Kk6MvkUjcC4
        user:
          $ref: '#/components/schemas/UserObject'
      additionalProperties: false
      description: Login object
      example:
        expires: 1566540249
        user:
          modified_on: 2020-01-30T09:41:04.000Z
          created_on: 2020-01-30T09:36:08.000Z
          is_disabled: 0
          roles:
          - admin
          name: Jamie Curnow
          nickname: James
          id: 1
          avatar: //www.gravatar.com/avatar/6193176330f8d38747f038c170ddb193?default=mm
          email: jc@jc21.com
        token: eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.ey...xaHKYr3Kk6MvkUjcC4
    HealthObject_version:
      required:
      - major
      - minor
      - revision
      type: object
      properties:
        major:
          minimum: 0
          type: integer
        minor:
          minimum: 0
          type: integer
        revision:
          minimum: 0
          type: integer
      additionalProperties: false
      description: The version object
      example: "{\"major\":2,\"minor\":0,\"revision\":0}"
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
